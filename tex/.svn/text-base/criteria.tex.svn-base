\section{Criteria}\label{sec:criteria}
We prioritised the criteria in order to fulfil the goals stated in Section \ref{sec:motivation} and \ref{sec:targetaudience}. A description of the language criteria is found in this section.

\subsection*{Defining the Criteria}
Different criteria can  be kept in mind when designing a programming language. The criteria which our language choices are based on are: Writability, readability, orthogonality, reliability, cost and learnability\citep{conceptbog}. By prioritising our criteria we can specify our language's most important characteristics.
\begin{description}
\item[Writability] describes the effort needed to write a program in a language; the less effort needed, the higher level of writability.

\item[Readability] describes the effort needed to read and understand a program written in a language.

\item[Orthogonality] means that a relatively small set of primitive constructs can be combined in a relatively small number of ways to build the control and data structures of the language. A simple illustration of the orthogonality concept is by comparing a simple addition of two 32-bit integer on the IBM mainframe computer and the VAX series of minicomputers as seen on Table \ref{fig:ibmvsvax} taken from the book "Concepts of Programming Languages". \citep{conceptbog}

\begin{table}[H]
\centering
\begin{tabular}{l}
\textbf{IBM} \\
A  $\quad$ $\ $ Reg1, memory\_cell \\ 
AR $\quad$ Reg1, Reg2\\\\
Reg1 and Reg2 represent registers. The semantics of these are:\\\\
Reg1 $\leftarrow$ contents(Reg1) $+$ contents(memory\_cell)\\ 
Reg1 $\leftarrow$ contents(Reg1) $+$ contents(Reg2)\\\\
\textbf{VAX}\\
ADDL $\quad$ operand\_1, operand\_2\\\\
Whose semantics are:\\\\
operand\_2 $\leftarrow$ contents(operand\_1) $+$ contents(operand\_2) 
\end{tabular}
\caption{Comparison of instruction sets}
\label{fig:ibmvsvax}
\end{table}

In the VAX addition instructions the operand can either be a register or a memory cell.
The VAX instruction design is orthogonal because a single instruction can use either register or memory cells as the operands. There are two ways to specify operand, which can be combined in all possible ways.
The IBM example on the other hand is not orthogonal because the IBM design is more restricted and therefore less writable. For example you cannot add two values and store the sum in a memory location. 

\item[Reliability] is a measure of how much effort is needed by the game creator to make a program that is reliable using the language, meaning that all errors are caught so the program works as intended. Together with the errors being caught, the language should also work as intended.

\item[Cost] is the amount of time needed by the programmer to use a language or the time it takes to compile and/or run a program written in our language

\item[Learnability] is not one of the criteria from "Concepts of Programming Languages", it is a criteria we have chosen to include, because it is a measure of how easy the language is to learn for people with little programming experience, which is one of the focuses in this report. 

\end{description}

\subsection*{Prioritising the Criteria}
The different criteria has been prioritised from high to low, depending on how much we focus on it. Table \ref{fig:prioritytable} shows how we have rated the different criteria for KAPAOOW.
\begin{table}[h!]
\centering
\begin{tabular}{| l | c | c | c |}
\hline
& \textbf{High} & \textbf{Medium} & \textbf{Low}\\ \hline
Readability & \textbf{x} & & \\ \hline
Reliability & & \textbf{x} &\\ \hline
Orthogonality & & & \textbf{x}\\ \hline
Writability & & & \textbf{x}\\ \hline	
Cost & & & \textbf{x}\\ \hline
Learnability & \textbf{x} & & \\ \hline
\end{tabular}
\caption{Priorities for our language}
\label{fig:prioritytable}
\end{table}
\begin{description}
\item[Readability] is rated as high because the focus in this project is to make a language that is easy for people with little programming experience to learn and use, which means making the syntax as easy as possible to read and understand.\\
\item[Reliability] is rated medium because in combination with the language being easy to learn it must also catch the errors at runtime and give the programmer easily understandable error messages so that the error can be easily fixed.\\
\item[Orthogonality] is rated low because having orthogonality in the programming language might reduce readability because a function in the language could behave differently depending on some conditions which might be confusing.\\
\item[Writability] is rated as low because the main focus in this project is the readability, which means we might have to sacrifice some writability in order to make it easier to read.
\item[Cost] is rated as low, because while the language should be easy to learn and use, we will not be focusing on optimizing the runtime of it.
\item[Learnability] is rated as high because, together with readability, the focus in this project is to make a language that is easy for people with little programming experience to learn and use.  
\end{description}